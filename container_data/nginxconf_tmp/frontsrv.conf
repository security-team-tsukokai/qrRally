server_tokens off;

upstream api_node {
    ip_hash;
    server 127.0.0.1:18080;
}

server {
    listen 443 ssl http2;
    server_name $srvname;
    ssl_certificate $cert;
    ssl_certificate_key $key;
    ssl_trusted_certificate $ca;
    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_dhparam /nginxconf/dhparam.pem;
    ssl_session_cache shared:MozSSL:10m;

    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header X-Content-Type-Options "nosniff";
    add_header X-Download-Options "noopen";
    add_header X-Frame-Options "deny";
    add_header X-Permitted-Cross-Domain-Policies "none";
    add_header X-XSS-Protection "1; mode=block";

    gzip on;
    gzip_types text/css application/javascript application/json application/font-woff application/font-tff image/gif image/png image/jpeg application/octet-stream;
    gzip_comp_level 6;

    root /webpage;
    index index.html;

    location /API {
        add_header Cache-Control no-cache;
        proxy_pass https://api_node;
    }
    location /favicon {
        empty_gif;
        access_log off;
        log_not_found off;
    }
    location /operation/admin {
        add_header Cache-Control no-cache;
        auth_request /API/Operation/NginxLogin;
    }

    error_page 403 404 =404 /404.html;
    location = /404.html {
        root /webpage/error;
        internal;
    }
    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root /webpage/error;
        internal;
    }

}

server {
    listen 80;
    server_name $srvname;
    location / {
        return 301 https://$host$request_uri;
    }
    location /.well-known/acme-challenge/ {
        root /webpage;
    }
}


server {
    listen 80 default_server;
    listen 443 ssl default_server;
    ssl_certificate $cert;
    ssl_certificate_key $key;
    server_name _;
    return 444;
}